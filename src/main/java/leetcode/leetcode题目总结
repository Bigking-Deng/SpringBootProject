刷题总结：

滑动窗口方法：

3.无重复字母的最大子串 （不断伸缩窗口过程中统计字符个数判断有无重复）热度10

76.最小覆盖子串（伸缩窗口辅助以map统计字母个数以判断是否满足条件伸缩调整窗口）热度9

209.长度最小的子数组（由于都是正数，可以使用伸缩滑动窗口）热度8

1004.最大连续1的个数3（滑动窗口确定1的个数比非1最多多K个，然后可以伸缩窗口确定最长窗口长度）热度6

395.至少有K个重复字符的最长子串（普通滑动窗口不具备单调可滑性，人为降维固定字符种类滑动窗口再遍历所有种类数的局部最大值得到最终值）热度5

剑指Offer48.最长不含重复字符的子字符串（正常滑动窗口）热度5

567.字符串的排列（利用数组计数统计字符个数，初始数组为子串字符数目，滑动时更新维护数组元素为0个数，全为0表示匹配）热度4

438.字符串中所有的字母异位词（与567题基本一样）热度3

340.至多包含K个不同字符串的最长子串（滑动窗口具有单调性）热度3


正常链表：

206.反转链表（正常prev，cur，next一步步操作，注意虚节点dummy=null的使用）热度10

25. K个一组翻转链表（正常一步步操作，注意虚节点dummy的使用，也可以用递归）热度10

21.合并两个有序链表（正常归并操作，可用递归或迭代）热度10

92.反转链表2 （正常一步步模拟操作）热度10

23.合并k个有序链表（可以用顺序一个个合并，也可以用分化再归并操作两两合并）热度10

143.重排链表（可遍历转为list取用，或改为快慢指针找到中点反转后半段再两段合并）热度10

19.删除链表倒数第N个节点（快慢指针定位节点）热度10

82.删除排序链表中的重复元素2（一次遍历操作，注意使用虚节点）热度9

234.回文链表（快慢指针赵中点，翻转后半部分，再比较）热度9

83.删除排序链表中的重复元素（一次遍历操作，注意使用虚节点）热度8

61.旋转链表（闭合为环再找其他位置断开）热度8

328.奇偶链表（分为两个奇偶链表再接在一起，注意此法空间复杂度就是O(1),只是改变了指针）热度6

86.分隔链表（弄两个虚节点将原链表分为两个链表，只是指针的变动而并没有开辟新的空间）热度6



hashmap：

146.LRU缓存（hashmap用来存取，map的value关联双向链表的节点用来维护使用时序）热度10

1.两数之和（map可以O(1)找到以前遍历过的结果,数组遍历一遍即可）热度10

560.和为K的子数组（子数组可以利用前缀和的特性存储遍历过的前缀和入hashmap，类似两数之和只是存的是前缀和而不是元素）热度8

138.复制带随机指针的链表（一次遍历并将clone的新节点和原节点一一对应存在hashmap，二次遍历利用原表随机关系指定新表）热度8

460.LFU缓存（保持时序必须用双向链表，又要保证不同频率各自的链表，所以需要双hashmap操作）热度8

706.设计哈希映射（使用哈希表原理数组+元素类型为链表进行实现）热度4


字符串操作：

415.字符串相加（从尾部循环进位操作）热度10

8.字符串转整数（就一次遍历一个个判断条件）热度9

165.比较版本号（一个个按字符串split规则比较判断）热度9

43.字符串相乘（按照竖式规则模拟计算）热度9

151.翻转字符串里的单词 （两次翻转）热度9

394.字符串解码（递归方式遍历恢复输入串）热度9

14.最长公共前缀（纵向扫描比较）热度8

179.最大数（优先选择靠前位数字大的）热度8

468.验证ip地址（就一个个按照规则判断）热度8

242.有效字母异位词（利用大小为26的数组计数字符数量）热度5

28.KMP算法 热度3


排序:

215.数组中的第k个最大元素（堆排序priorityQueue或基于分治partition的快速排序）热度10

88.合并两个有序数组（与21类似，归并排序）热度10

148.排序链表（归并排序）热度9


双指针:

15.三数之和 （双指针大小调整滑动方法，注意去重）热度10

141.环形链表 （快慢指针步长差判断环）热度10

160.相交链表（双指针滑到尾部后从另一端的头部继续滑动，非常巧妙须硬记住方法）热度10

142.环形链表2 （快慢指针相遇确定环的长度）热度10

283.移动0（保持首尾两个指针维护末尾的0序列段，头部的非0序列段和两指针中间的还没判断序列） 热度8

11.盛水最多的容器（两个指针滑动不断选择可能出现最大值的那一些集合结果）热度8

26.删除排序数组重复项（慢指针维护新的数组，快指针遍历将满足条件元素加入慢指针维护的部分）热度7

75.颜色分类（典型的双指针问题，将一个数组分成三块并维护）热度7

16.最接近的三数之和（与三数之和基本一样，只需更新最小差）热度7

611.有效三角形的个数（三指针类似三数之和，此题为后两个指针同向滑动）热度6

443.压缩字符串（双指针，一个用来遍历快指针，一个用来维护结果序列的慢指针）热度5

18.四数之和（与三数之和类似，用四个指针滑动）热度5

977.有序数组的平方（首尾两个指针向中间移动收缩比较大小构建新的数组）热度4


动态规划:

53.最大子数组和（连续的子数组的和，因为存在负数无法通过滑动窗口，一般只能动态规划）热度10

5.最长回文子串（可用i:length->0,j:i->length的内外双循环经典动态规划，或者中心扩展法）热度10

121.买卖股票的最佳时机（这个一次遍历动态记录minprice即可，也可由高级问题动态规划退化而来）热度10

300.最长上升子序列（一次遍历以dp方式保存每一个以i结尾的最长子序列长度）热度10

72.编辑距离（经典两个字符串从尾部i，j一个个字符情况分析分析递推出转移方程）热度10

1143.最长公共子序列（经典两个字符串从尾部i，j一个个字符情况分析分析递推出转移方程）热度10

70.爬楼梯（注意与零钱兑换问题区分比较）热度9

322.零钱兑换（经典背包问题，注意遍历循环的顺序和滚动数组的使用，建议画图来将二维退化成一维滚动数组，注意一般背包还是完全背包问题工时）热度9

32.最长有效括号（转移方程比较难想，还是从字符串末尾开始找规律）热度9

64.最小路径和（正常动态规划）热度9

221.最大正方形（巧妙地以每个点作为正方形右下角所能形成的最大正方形作为构造转移，由之前的点转移计算当前点作为右下角最大值）热度9

718.最长重复子数组（类似公共子序列，虽然是连续的子数组还是得用动态规划）热度8

62.不同路径（正常动态规划）热度8

121.买卖股票的最佳时机2（高阶问题退化成动态规划，或用贪心解决）热度8

139.单词拆分（正常动态规划两层遍历，有点类似于完全背包问题）热度8

198.打家劫舍（正常动态规划）热度8

152.乘积最大子数组（动态规划注意维护每个点为末尾的序列的正最大值和负最小值用来递推转移）热度8

剑指offer42：连续子数组的最大和（由于有负数还是用动态规划）热度7

123.买卖股票的最佳时机（动态规划每天定义两个状态持有和不持有股票）热度7

补充题2.圆环回原点问题（注意取模操作）热度7

518.零钱兑换2（经典背包问题，注意遍历循环的顺序和滚动数组的使用，建议画图来将二维退化成一维滚动数组，注意一般背包还是完全背包问题工时）热度7

91.解码方法（假如要列出具体方法就需要DFS+回溯，假如只需要统计数量之类就直接动态规划，可以DFS+回溯的题一定可以动态规划）热度7

213.打家劫舍2（注意将头尾相连的两或三个点拿出来单独分成两或三种情况，每种情况动态规划求解）热度6

10.正则表达式匹配（两个字符串末尾动态规划）热度6

12.三角形最大路径和（正常动态规划）热度6

887.鸡蛋掉落（动态规划转移方程较难且有优化计算方式）热度6

85.最大矩形（与最大正方形基本类似，判断前两个状态得出的此状态的长与宽）热度6

673.最长递增子序列的个数（经典动态规划）热度6

44.通配符匹配（两个字符串末尾动态规划）热度5

279.完全平方数（枚举1->i加上dp[i]得到dp[j]来转移数量）热度5

63.不同路径2（直接动态规划）热度5

494.目标和（背包问题选与不选正或负，问题是dp的target可能为负，故将原问题稍转化一下保证都为正数）热度5

115.不同的子序列（还是两个字符串从尾部判断）热度5

97.交错的字符串（还是两个字符串从尾部判断）热度5

面试题17.24.最大子矩阵（可以按之前85类似方法快速求矩形数字和遍历判断或者降维成一维使用最大子数组和）热度5

516.最长回文子序列（与最长回文子串双循环法思路相同，不同的是转移方程可以去掉任一端的一个字符，子序列个数为困难题）热度5

343.整数拆分（注意拆分时要考虑假如剩余数不拆分的话的乘积情况是不一样的，要单独考虑）热度5

337.打家劫舍3（类似于树的递归判断，也可记忆化递归也就是动态规划去求解）热度4

188.买卖股票的最佳时机4（高级问题动态规划，保持每一天的持有和不持有股票两个状态和还剩多少次交易机会，二维dp+两个状态）热度4

410.分割数组的最大值（动态规划从尾部一个个开始切子数组判断最大值转移）热度4

354.俄罗斯套娃信封问题（先排序按第一个元素升序再求第二个元素的最长递增序列，为了保证第一元素相同情况下第二元素不会满足递增序列，排序时当第一元素相同第二元素需要倒过来排序以求不会影响最长递增序列的求解）热度4

647.回文子串（与第五题方法一样）热度4

680.验证回文串2，1216.验证回文串3（可以用DFS递归判断，也可以先求出516最长回文子序列再一键反推差多少个字符）热度5

1312添加字符串成为回文串（仍是516的子问题，先求出最长子序列，把这个序列与输入串长度差补上去就是最小添加次数）热度3

416.分割等和子集（转化为0-1背包问题）热度3

787.K站内最便宜的航班（动态规划求解，利用枚举上一次出发点+cost的最小值为当前的终点）热度3


二分查找：

33.搜索旋转排序数组（有一个最小值pivot点，需要有条件的二分查找部分有序和无序的数组）热度10

4.寻找两个正序数组的中位数（确定两个切分位置保证两个位置左部分元素数量之和=右部分，在此基础上判断切分点两侧元素大小而二分移动切分点）热度10

69.x的平方根（拿二分查找一个个比较）热度9

34.排序数组中查找第一个和最后一个位置（二分查找两次寻找边界）热度9

162.寻找峰值（根据变化趋势进行二分查找）热度8

153.搜索旋转排序数组中的最小值（与33类似，二分查找搜索pivot值）热度8

24.两两交换链表节点（递归或非递归一步步模拟操作）热度8

74.搜索二维矩阵（两次二分查找即可或者将矩阵变成一行一次二分查找）热度7

154.搜索旋转排序数组中的最小值2（与33类似，二分查找搜索pivot值，包含重复值）热度5

1095.山脉数组中查找目标值（先二分查找到山脉顶峰，再在两侧单调序列中二分查找target）热度4

540.有序数组中的单一元素（二分查找和利用重复一对数的下标在单个数的左右边奇偶性不同来决定二分查找mid哪一侧）热度4


栈与队列：
20.有效的括号（使用栈遍历消除判断左右括号）热度10

232.用栈实现队列（两个栈结合）热度10

2.两数相加（从末尾先算并对齐自然想到栈的结构）热度9

155.最小栈（辅助一个栈记录当前操作位置的最小值，操作时同频push，pop）热度9

224.基本计算器 （两个栈记录数字和操作符然后入栈左括号，碰到右括号计算至操作符栈顶位左括号时停止）热度8

227.基本计算器2（两个栈记录数字和操作符，遇到* /就计算，+ -先入栈最后一把算）热度8

225.用队列实现栈（一个队列先入的元素全部再出来添到当前入队元素末尾）热度7

445.两数相加2（利用栈）热度7

71.简化路径（按照/进行split然后用栈的特性进行简化处理）热度6

1047.删除字符串中所有相邻重复项（利用栈进行消消乐）热度6

622.设计循环队列（保持两个首尾指针指向现有队列的头尾随着元素变化移动，对队列容量取模计算实现用满空间）热度4

剑指Offer31.栈的压入弹出（两个指针遍历数组进行模拟）热度3

150.逆波兰表达式（利用栈求解即可


DFS深度优先遍历：

200.岛屿数量（DFS遍历陆地，最外层循环次数计数确定做了多少次表示陆地数量）热度10

93.复原IP地址（DFS+递归回溯方法遍历每一种可能，最内层递归统计结果，递归过程中记录当前路径）热度9

22.括号生成（DFS加回溯并剪枝，剪枝保证当前已用的左括号大于右括号才能合法表达式，注意集合传参须回溯基本类型传参不须）热度9

39.组合总和（本质是零钱兑换类的完全背包问题，但因为要列出所有结果，必须用回溯剪枝进行，否则直接动态规划即可）热度9

695.岛屿最大面积（经典DFS遍历搜寻陆地）热度8

207.课程表（先整理数据得到每个点的出度hashmap<node, list>>DFS回溯遍历携带路径以判断环，或者类似BFS的入度拓扑排序解决）热度8

207.课程表2（同样的DFS回溯，注意由于可能先遍历了子路径再遍历母路径的情况，记录路径时用头插法保持正确性）热度8

79.单词搜索（类似岛屿问题标记是否访问和回退操作）热度7

329.矩阵中最长递增路径（DFS岛屿问题，但要记录之前每个格子最大序列，因为可能存在拼接串）热度7

679.24点游戏（就是递归回溯列出当前轮的所有可能然后减去一个数字进入内层递归）热度6

37.解数独（DFS回溯法和利用全局的若干个集合进行统计判断是否能填入此数字）热度6

51.N皇后问题（与解数独问题一样）热度5

130.被围绕的区域（可以从边界的O开始DFS打上标记，最后整个遍历没有被打上标记的转为X）热度4

17.电话号码的字母组合（首先存储号码数字对应关系，再DFS回溯法递归穷举）热度4

301.删除无效的括号（就DFS+回溯或者BFS求解，无法用动态规划）热度3

638.大礼包（依然是DFS+回溯的方法，加上记忆化存储可以减少重复计算）热度3


数组：

56.合并区间（按照每个区间起始坐标排序，然后遍历判断是否重合合并）热度10

55.跳跃游戏（就是每一步去探索下一次能覆盖到达的范围）热度7

45.跳跃游戏2（就是每一步去探索下一次能覆盖到达的范围然后记录当前轮数就是次数）热度7

189.轮转数组（将某元素移到k位后，k位的再移..直到回到第一次开始的位置，若移动次数小于数组长度，向后一位继续while移动）热度6

384.打乱数组（洗牌算法）热度6

剑指Offer39.数组中出现超过一半的数字 热度6

剑指Offer61.扑克牌中的顺子（排序遍历或大小值维护）热度6

252，253.会议室1，2（按区间开始时间排序然后一次遍历合并区间，最后统计单个区间个数）热度5

554.砖墙（前缀和数组每个数字表示这里横坐标是空隙，hashmap统计二维数组中每行数字出现个数也就是哪里横坐标是空隙）热度5

380.O(1)时间插入删除获得随机数（哈希表维护，并维护固定长度的数组，每当删除元素，将数组末尾元素换到删除的index处保证没有空值）热度5

528.按权重随机选择（前缀和数组，然后随机一个数判断在哪两个数之间就可以满足这个概率模型）热度4

525.连续数组（0转为-1，利用元素个数相等使用前缀和数组采用两数之和思想的哈希表方法，不能使用滑动窗口找不到滑动单调性）热度4

523.连续子数组的和（前缀和和哈希表，和利用两个前缀和mod k相同代表这个子数组可被整除）热度3

974.可被K整除的子数组（和523相同）热度3



二叉树:

102.二叉树的层序遍历（正常层序模板）热度10

103.二叉树的锯齿形层次遍历（层序遍历模板稍改）热度10

236.二叉树的最近公共祖先（递归后序时判断左右孩子返回boolean是否含有待寻找节点，注意子情况）热度10

124.二叉树中最大路径和（递归法拆为：经过当前node的路径 + 当前node的孩子的最大路径问题=当前node的最大路径问题）热度10

94.二叉树的中序遍历（掌握迭代法）热度10

144.二叉树的前序遍历 （掌握迭代法）热度9

199.二叉树右视图（层序遍历从右边开始）热度10

105.前序中序遍历序列恢复二叉树（利用前序中序特性找到当前的root node递归恢复树的结构）热度9

110.平衡二叉树（递归求树的高度，再递归判断树的每个节点的高度差）热度9

104.二叉树的最大深度（正常递归）热度9

101.对称二叉树（正常递归）热度9

543.二叉树的直径（先递归求每个点深度，再递归求本问题的拼接L+R+1,二叉树经典两递归解决问题）热度9

129.求根到叶子结点的数字之和（正常递归，辅助以全局集合存储每条路径数字，类似于不回溯的DFS遍历时记录路径）热度9

113.路径总和2（正常递归）热度9

98.验证二叉搜索树（从root开始先序遍历到每个点携带此点可选范围判断是否满足，更新取值范围继续递归子节点）热度9

226.翻转二叉树（递归翻转）热度8

662.二叉树的最大宽度（层序遍历附带每个node的编号，注意二叉树父子节点编号关系式，编号差为宽度）热度8

297.二叉树的序列化和反序列化（正常递归DFS或BFS，注意空节点也要记录NULL字符串保证树结构反序列化时的唯一性）热度8

958.二叉树完全性检验（层序遍历辅助以节点编号关系判断） 热度8

222.完全二叉树节点个数（完全二叉树高度特性比较左右子树高度然后直接用2^n-1直接计算，复杂度logN*logN） 热度5

450.删除二叉搜索树的节点（注意寻找父节点删除时与子节点之间的大小关系来调整树的结构）热度7

230.二叉搜索树的第K小的元素（利用搜索树特性中序遍历展开成升序数组再找）热度7

572.树的子结构（经典两个递归，一个是本问题的子问题，一个是直接比较树的相同与否）热度7

114.二叉树展开为链表（将先左后右的先序变为先右后左的后序遍历翻转一下即可，因为先序会破坏还没访问的树的结构）热度7

剑指Offer27.二叉树镜像（递归判断）热度6

106.后序中序遍历序列恢复二叉树（与105一样，利用中序后序树结构节点分布特性递归恢复）热度6

96.不同的二叉搜索树（搜索树特性遍历数组每个元素为root时递归得到左子树数目和右子树数目相乘）热度6

863.二叉树中所有距离为K的节点（递归找父节点的方法是先遍历一遍用hashmap储存所有点的父节点，然后从map中获取）热度5

426.将二叉树转化为排序的双向链表（中序遍历递归过程中保持前一个node，注意开始搞一个虚节点）热度4

437.路径总和3（暴力递归DFS会有很多重复计算，使用前缀和数组思想，保留root到当前点路径的所有前缀和保存在集合中传递记录）热度4

99.恢复搜索树（隐式中序遍历找到错误的两个点，保存交换，没必要构造遍历数组）热度3


排列组合：

46.全排列（对于有重复数字版本，先排序数组，每一轮选数字时跳过重复，且排列需要每一轮从头开始遍历，选中的打标记下次不可再选）热度10

78.子集（每轮与排列不同要从上一轮选择的数字后开始遍历，也要剪枝去重；与组合方法类似，不同的是不需要一定要选足几个数字，每一轮遍历都要记录以前当前轮结束需要记录的子集结果，而组合是选满数字才到最内层递归记录结果）热度9

40.组合总和2（DFS+回溯+剪枝列出每种可能结果）热度7

77.组合（先排序，再从当轮选择数字开始遍历下一轮选择方案，记录已选个数到达即终止递归）热度4


单调栈和单调队列：

239.滑动窗口最大值（位于左边的值如果还小于右边入队的值，则之后滑动过程中也必不可能是最大值故直接扔掉，以此特性维护一个单调队列）热度9

739.每日温度（单调栈精髓在于我比你更近还比你更符合条件，之前入栈的元素就一定不被需要就移除了）热度8

402.移掉K位数字（一次遍历确定每个数字出现次数以便二次遍历判断是否能丢弃，二次遍历维护单调栈）热度8

84.柱状图中的最大矩形（每个坐标处只考虑当前坐标高度的矩形，故利用单调栈得出坐标左右最近的低于当前高度的坐标，两次遍历单调栈）热度5

503.下一个更大的元素2（环状就将两个数组拼在一起模拟求解）热度5

316.去除重复字母（与402类似，先遍历一次确定此字符是否是最后一个，二次遍历维护单调栈来判断去除字符保证最小字典序）热度5

862.和至少为K的最长子数组（由于有负数所以不能滑动，利用前缀和数组维护两端单调队列求解，难度很大）热度5


技巧题：

42.接雨水 （使用每个格子的左边最大和右边最大的较小值减去当前格子的高度=当前格子能储水量）热度10

31.下一个排列（字典序从尾部向前遍历找到第一处单调递减的地方，此处A与遍历过的某稍大一点B处交换并将A处后面序列单增排序即满足）热度9

41.缺失的第一个整数（利用下标特性，首先排除负数干扰全部转为大于最大下标的正整数，然后再由一次遍历辅助负数标记index法判断）热度9

240.搜索二维矩阵2（每一行二分查找或者从右上角开始Z字形查找）热度9

128.最长连续序列（利用哈希表存储每个点左右相邻点的已有最大长度序列）热度8

剑指Offer51.数组中逆序对（此题技巧性极强）热度7

7.整数反转（翻转过程中找到规律提前判断是否溢出，类似于首尾拼接断开环的方式）热度7

135.分发糖果 热度7

剑指Offer62.约瑟夫环问题（利用递归或者位置反推得到最初的index）热度7

295.数据流的中位数（巧妙运用两个大小相同的PriorityQueue动态调整维护中位数快速找到）热度7

287.寻找重复数（和41题类似，利用index打上负数标记判断是否已经出现过）热度6

459.重复的子字符串（两个原字符串拼接后掐头去尾再判断是否包含原串，技巧性较强）热度6

556.下一个更大元素3（和下一个排列基本一模一样）热度5

264.丑数2（运用最小堆或者三个指针归并算法不断更新结果数组，本质是维护三个相同数组乘以2，3，5以选出下一个最小的数字加入这个数组再移动指针，注意去重，思路类似于合并多个排序子数组为一个大数组）热度5

315.计算右侧小于当前元素的个数（归并排序模拟过程分析，此题较难）热度4



数学和模拟操作：

54.螺旋矩阵（就模拟运行，可用标记法或再设一个标记矩阵判断是否曾遍历过）热度10

48.旋转图像 （找规律）热度9

498.对角线遍历 热度8

59.螺旋矩阵2 热度7

50.求幂pow （傻瓜递归）热度7

400.第N位数字（直接统计计算）热度6

168，171.excel表格的转换（本质是多进制之间的相互转换，注意K进制sum(a*K^a)=具体值大小的计算公式）热度6

6.Z字形变换（利用每次移动行的变化，每一行存成一个字符串，最后每一行相加）热度4

204.计算质数（倍数埃氏筛）热度4

407.接雨水2（从边缘开始，所有元素入堆，每次弹出一个最小的元素（利用堆的性质，对每个弹出的元素（i，j），访问其上下左右位置，若小于当前位置，说明能存储水，且水位最高为heightMap[i][j]，用全局变量累加，本题非常难）热度4

166.分数到小数（模拟除法运算，记录每个小数位看有没有在之前出现过）热度3

字典树trie：

440.字典序的第K小数字（本体技巧较强，模拟出在一个多叉树（trie）中数元素个数的操作）热度7

208.实现Trie（前缀树）（用数组模拟出26叉树的树形结构，自定义数据类型，然后在此26叉树上进行操作）热度7

386.字典序排树（构建多叉树trie递归即可）热度4

378.有序矩阵中第k小的元素（每行看成一个数组归并或者非常巧妙的二维二分查找）热度3

172.阶乘后的0个数（寻找5的因子个数）热度3


贪心：

678.有效的括号字符串（对于同种括号，必满足当前坐标前左括号数量大于等于右括号，以此准则一次遍历携带左右括号差值上下界传递）热度6

134.加油站（亏空最严重的那个点的下一站作为开始或者用更严谨的反证法）热度6

670.最大交换（找到每个数A对应的右边比自己大的且最靠右的数字B，再从高位开始的第一个存在这种数B的数字A与B交换即可）热度5

763.划分字母区间（先遍历存储每个字母的最左和最右位置，再贪心遍历逐渐延长当前序列范围直到满足切为一个序列...）热度4


位运算：

136.只出现一次的数字 热度8

191.位1的个数 热度5

260.只出现一次的数字3 热度5

补充题.int整数和ip地址的相互转换 热度4




并查集：

547.省份数量（朋友圈连接问题，可用DFS也可用并查集）

721.账户合并
